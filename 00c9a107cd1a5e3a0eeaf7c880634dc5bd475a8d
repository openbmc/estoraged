{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b53a67f5_a21d5fb7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-04-15T03:42:36Z",
      "side": 1,
      "message": "I was going to say you\u0027re not changing the constructor.. until I saw that you were calling the init in the initializer list. That\u0027s pretty funky, I must have missed that in my initial review. Just curious, what was the reasoning behind that instead of just having the constructor?",
      "range": {
        "startLine": 7,
        "startChar": 19,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "00c9a107cd1a5e3a0eeaf7c880634dc5bd475a8d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9fc9d3a_4ddd4125",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2022-04-15T16:58:08Z",
      "side": 1,
      "message": "If we didn\u0027t initialize the handle like this, (I think) the default constructor for handle would get called before running the CryptHandle constructor, which might not be allowed.",
      "parentUuid": "b53a67f5_a21d5fb7",
      "range": {
        "startLine": 7,
        "startChar": 19,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "00c9a107cd1a5e3a0eeaf7c880634dc5bd475a8d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b68bfab9_36077b45",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-04-15T18:14:09Z",
      "side": 1,
      "message": "Wouldn\u0027t it be something like this in the constructor instead? or is my understanding of stdplus::Managed simply wrong and there\u0027s some other constructor that\u0027s needed for it:\n\n```\nstruct crypt_device* cryptDev \u003d nullptr;\nint retval \u003d crypt_init(\u0026cryptDev, device);\nif (retval \u003c 0)\n{\n    lg2::error(\"Failed to crypt_init\", \"REDFISH_MESSAGE_ID\",\n               std::string(\"OpenBMC.0.1.InitFail\"));\n    throw ResourceNotFound();\n}\nhandle \u003d cryptDev;\n```\n\nAt the same time though, I think having a separate init function instead is fine too - as sometimes having too big of a constructor (although in this case it\u0027s not too big) is a hassle to read through so we don\u0027t have to change this. Just curious about the design choice here to learn.",
      "parentUuid": "d9fc9d3a_4ddd4125",
      "range": {
        "startLine": 7,
        "startChar": 19,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "00c9a107cd1a5e3a0eeaf7c880634dc5bd475a8d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85604616_ce57fc20",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2022-04-18T17:35:37Z",
      "side": 1,
      "message": "Feel free to experiment with this, but I think handle has to be in the initializer list, to avoid calling handle\u0027s default constructor.",
      "parentUuid": "b68bfab9_36077b45",
      "range": {
        "startLine": 7,
        "startChar": 19,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "00c9a107cd1a5e3a0eeaf7c880634dc5bd475a8d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "07f32df5_727ef473",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-04-19T22:42:07Z",
      "side": 1,
      "message": "As written, Brandons suggestion does not address the concern wedig is mitigating.\nThe handle object will be created, before the first line of the constructor.\n\nIt might be possible, to create Managed and assinge it something to manage later. I will look at this in more detail later.",
      "parentUuid": "85604616_ce57fc20",
      "range": {
        "startLine": 7,
        "startChar": 19,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "00c9a107cd1a5e3a0eeaf7c880634dc5bd475a8d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "776913f8_bd471e85",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2022-04-15T03:42:36Z",
      "side": 1,
      "message": "nit: new line",
      "revId": "00c9a107cd1a5e3a0eeaf7c880634dc5bd475a8d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7af6602_01ca28d1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-04-19T22:42:07Z",
      "side": 1,
      "message": "done",
      "parentUuid": "776913f8_bd471e85",
      "revId": "00c9a107cd1a5e3a0eeaf7c880634dc5bd475a8d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34e93d7c_0e983cc0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2022-04-15T16:58:08Z",
      "side": 1,
      "message": "Currently, all of the callers are explicitly checking for nullptr, so I think you should change all the callers in this commit, as well.",
      "revId": "00c9a107cd1a5e3a0eeaf7c880634dc5bd475a8d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17e5a086_aa7ab16c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2022-04-15T17:05:51Z",
      "side": 1,
      "message": "Oh, I just found your other CL to do this. I thought it would all be in the same commit.",
      "parentUuid": "34e93d7c_0e983cc0",
      "revId": "00c9a107cd1a5e3a0eeaf7c880634dc5bd475a8d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "faf83bee_9edef857",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-04-15T17:51:10Z",
      "side": 1,
      "message": "yeah, this change takes place on top of that change.\n\nYou can see the Relation chain, section in the review\nhttps://gerrit.openbmc-project.xyz/c/openbmc/estoraged/+/52972/1",
      "parentUuid": "17e5a086_aa7ab16c",
      "revId": "00c9a107cd1a5e3a0eeaf7c880634dc5bd475a8d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}