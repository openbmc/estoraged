{
  "comments": [
    {
      "key": {
        "uuid": "6f00f033_8608a195",
        "filename": "include/erase.hpp",
        "patchSetId": 33
      },
      "lineNbr": 12,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-12-03T00:52:55Z",
      "side": 1,
      "message": "We generally prefer to pass string_views if we are going to store in a string anyway. It would reduce all but the final needed copy.",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7448bcbe_a07c5940",
        "filename": "include/erase.hpp",
        "patchSetId": 33
      },
      "lineNbr": 12,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-12-03T04:35:42Z",
      "side": 1,
      "message": "I used to need a c_string to open a file, that is typically done by creating a  std::string from a string_view then use the real string to create the c_string. It felt strange passing a string_view only to immediately create a new std::string.\n \nI don\u0027t know if the std++ will let me open a file with only a std::string",
      "parentUuid": "6f00f033_8608a195",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "924f868c_94e786f4",
        "filename": "include/erase.hpp",
        "patchSetId": 33
      },
      "lineNbr": 12,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2021-12-03T23:51:16Z",
      "side": 1,
      "message": "I thought William intended for your class member devPath to still be a string. My understanding was that only the constructor parameter inDevPath needs to be a string_view, but I\u0027ll let him clarify.",
      "parentUuid": "7448bcbe_a07c5940",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c95732b5_02ac4330",
        "filename": "include/erase.hpp",
        "patchSetId": 33
      },
      "lineNbr": 12,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-12-08T11:09:42Z",
      "side": 1,
      "message": "Yeah, ultimately the class should store an std::string since it needs to outlive the input parameters potentially. I was just saying the input arguments should be string_views.",
      "parentUuid": "924f868c_94e786f4",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d14e0715_d91544fe",
        "filename": "include/estoraged_conf.hpp.in",
        "patchSetId": 33
      },
      "lineNbr": 0,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-12-03T00:52:55Z",
      "side": 1,
      "message": "You don\u0027t need to provide an input file if you are just doing trivial value setting.",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "599a5afc_985973fe",
        "filename": "include/estoraged_conf.hpp.in",
        "patchSetId": 33
      },
      "lineNbr": 0,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-12-03T04:35:42Z",
      "side": 1,
      "message": "The goals is too allow Expected size for the eMMC can be set in the recipe, so they are not public, and easily changed . Wedig and I also discussed reading this information from a config file, or having it passed in as arguments at start. What are your thoughts?\n \nI could verifyDriveGeometry.cpp and verifyGeometry_test.cpp as a meson config files, letting me use @ERASE_*_GEOMETRY@ in it, and making this file unnecessary?",
      "parentUuid": "d14e0715_d91544fe",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f48ea858_3ae285ed",
        "filename": "include/estoraged_conf.hpp.in",
        "patchSetId": 33
      },
      "lineNbr": 0,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-12-08T11:09:42Z",
      "side": 1,
      "message": "My suggestion wasn\u0027t against using compile time params, just that you don\u0027t need to explicitly define a header file to have contents filled in. You can take advantage of meson doing this for you.\n\nhttps://mesonbuild.com/Configuration.html#configuring-without-an-input-file",
      "parentUuid": "599a5afc_985973fe",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "932c4631_35747e6c",
        "filename": "include/verifyDriveGeometry.hpp",
        "patchSetId": 33
      },
      "lineNbr": 6,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-12-03T00:52:55Z",
      "side": 1,
      "message": "Don\u0027t include things in the header that aren\u0027t used here. Prefer to add them to the CPP file.",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f519dfe_aa8d64d4",
        "filename": "include/verifyDriveGeometry.hpp",
        "patchSetId": 33
      },
      "lineNbr": 6,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-12-03T04:35:42Z",
      "side": 1,
      "message": "good call, I forgot to remove them\ndone",
      "parentUuid": "932c4631_35747e6c",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e04a0e32_c53151cb",
        "filename": "include/verifyDriveGeometry.hpp",
        "patchSetId": 33
      },
      "lineNbr": 18,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-12-03T00:52:55Z",
      "side": 1,
      "message": "Pass a string_view",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f099688d_32ef2ea3",
        "filename": "include/verifyDriveGeometry.hpp",
        "patchSetId": 33
      },
      "lineNbr": 18,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-12-03T04:35:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e04a0e32_c53151cb",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "237d71a2_e7d914ef",
        "filename": "src/erase/erase.cpp",
        "patchSetId": 33
      },
      "lineNbr": 15,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-12-03T00:52:55Z",
      "side": 1,
      "message": "nit: No need for a temporary string representation.",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed44fe88_c69c2bc7",
        "filename": "src/erase/erase.cpp",
        "patchSetId": 33
      },
      "lineNbr": 15,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-12-03T04:35:42Z",
      "side": 1,
      "message": "done",
      "parentUuid": "237d71a2_e7d914ef",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a55bb27_8cd7d5e1",
        "filename": "src/erase/erase.cpp",
        "patchSetId": 33
      },
      "lineNbr": 17,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-12-03T00:52:55Z",
      "side": 1,
      "message": "Prefer `stdplus::fd::open` as it checks the error status from fd. I know I didn\u0027t add O_NDELAY, but it shouldn\u0027t do anything since you don\u0027t read / write?",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31ff46e6_f7a30866",
        "filename": "src/erase/erase.cpp",
        "patchSetId": 33
      },
      "lineNbr": 17,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-12-03T04:35:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a55bb27_8cd7d5e1",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b006570_b4c45f55",
        "filename": "src/erase/erase.cpp",
        "patchSetId": 33
      },
      "lineNbr": 28,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-12-03T00:52:55Z",
      "side": 1,
      "message": "No need to check RC, fd.ioctl internally throws an exception if it is negative so this is a noop.",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f1ab0a1_4b453a58",
        "filename": "src/erase/erase.cpp",
        "patchSetId": 33
      },
      "lineNbr": 28,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-12-03T04:35:42Z",
      "side": 1,
      "message": "neat, done",
      "parentUuid": "8b006570_b4c45f55",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f39e160_b24ad95c",
        "filename": "src/erase/erase.cpp",
        "patchSetId": 33
      },
      "lineNbr": 28,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-12-08T11:09:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5f1ab0a1_4b453a58",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e14eb424_c1389abe",
        "filename": "src/estoraged.cpp",
        "patchSetId": 33
      },
      "lineNbr": 38,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-12-03T00:52:55Z",
      "side": 1,
      "message": "You might consider dropping the default so that you get a compilation error if new enum definitions are added.",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "173641e1_747cc059",
        "filename": "src/estoraged.cpp",
        "patchSetId": 33
      },
      "lineNbr": 38,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-12-03T04:35:42Z",
      "side": 1,
      "message": "makes sense",
      "parentUuid": "e14eb424_c1389abe",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec8f1bd6_2135e5a6",
        "filename": "src/test/erase/meson.build",
        "patchSetId": 33
      },
      "lineNbr": 1,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-12-03T00:52:55Z",
      "side": 1,
      "message": "I would copy this iteration of the gtest stuff as it fixes warnings and missing thread dependency.\n\nhttps://github.com/openbmc/phosphor-networkd/blob/master/test/meson.build#L1",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dce24ca_2e788c2a",
        "filename": "src/test/erase/meson.build",
        "patchSetId": 33
      },
      "lineNbr": 1,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-12-03T00:56:33Z",
      "side": 1,
      "message": "I guess you will want to consolidate this with the other test change that Wedig committed.",
      "parentUuid": "ec8f1bd6_2135e5a6",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7ca377c_07828290",
        "filename": "src/test/erase/meson.build",
        "patchSetId": 33
      },
      "lineNbr": 1,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-12-03T04:35:42Z",
      "side": 1,
      "message": "I moved my testing stuff into what John Wedig meson\nThanks for looking at it",
      "parentUuid": "1dce24ca_2e788c2a",
      "revId": "4e3f24c3ed994459d3adbd5da10e22d3a7bb15fa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}