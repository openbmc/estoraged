{
  "comments": [
    {
      "key": {
        "uuid": "588264d7_3987ef8f",
        "filename": "include/estoraged_conf.hpp.in",
        "patchSetId": 23
      },
      "lineNbr": 5,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2021-11-23T03:59:36Z",
      "side": 1,
      "message": "Interesting, I guess I\u0027ve never seen this done like this",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 5,
        "endChar": 0
      },
      "revId": "f4ee09769f0f081a49b8a05606a7dec7e51a97a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "000f9e50_45690530",
        "filename": "src/erase/erase.cpp",
        "patchSetId": 23
      },
      "lineNbr": 20,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2021-11-23T03:59:36Z",
      "side": 1,
      "message": "Do we *need* to declare this a separate string to pass to lg2::error? or could we just have it as part of lg2::error similar to the other strings?\n\nSame with below",
      "range": {
        "startLine": 20,
        "startChar": 7,
        "endLine": 20,
        "endChar": 58
      },
      "revId": "f4ee09769f0f081a49b8a05606a7dec7e51a97a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f756493_5ef012af",
        "filename": "src/erase/erase.cpp",
        "patchSetId": 23
      },
      "lineNbr": 20,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2021-11-23T17:16:06Z",
      "side": 1,
      "message": "I\u0027ve been fighting with lg2 recently, as well. You can\u0027t seem to simply pass in the literal string in quotes. But you can explicitly call the string constructor when you pass the string as a function parameter, e.g. std::string(\"asdf\")",
      "parentUuid": "000f9e50_45690530",
      "range": {
        "startLine": 20,
        "startChar": 7,
        "endLine": 20,
        "endChar": 58
      },
      "revId": "f4ee09769f0f081a49b8a05606a7dec7e51a97a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d02108f_99ee691c",
        "filename": "src/erase/erase.cpp",
        "patchSetId": 23
      },
      "lineNbr": 20,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-11-23T23:53:53Z",
      "side": 1,
      "message": "Yeah, it\u0027s really goofy design (one of the things I had an issue with during design review). I was looking into fixing this upstream but haven\u0027t spent much time on it.",
      "parentUuid": "5f756493_5ef012af",
      "range": {
        "startLine": 20,
        "startChar": 7,
        "endLine": 20,
        "endChar": 58
      },
      "revId": "f4ee09769f0f081a49b8a05606a7dec7e51a97a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c820f76a_a45eaa57",
        "filename": "src/erase/meson.build",
        "patchSetId": 23
      },
      "lineNbr": 13,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2021-11-23T17:16:06Z",
      "side": 1,
      "message": "extra spaces",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 2
      },
      "revId": "f4ee09769f0f081a49b8a05606a7dec7e51a97a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bb8e0e0_1a193eba",
        "filename": "src/meson.build",
        "patchSetId": 23
      },
      "lineNbr": 25,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2021-11-23T17:16:06Z",
      "side": 1,
      "message": "extra spaces",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 2
      },
      "revId": "f4ee09769f0f081a49b8a05606a7dec7e51a97a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}