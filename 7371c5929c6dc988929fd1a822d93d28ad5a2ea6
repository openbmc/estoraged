{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fdf9271a_3f365520",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-04-06T19:30:21Z",
      "side": 1,
      "message": "Thanks for looking this over",
      "revId": "7371c5929c6dc988929fd1a822d93d28ad5a2ea6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bd5c88d_93b9ab67",
        "filename": "include/pattern.hpp",
        "patchSetId": 9
      },
      "lineNbr": 30,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2022-04-06T20:16:10Z",
      "side": 1,
      "message": "Add comment for the new parameter.",
      "range": {
        "startLine": 29,
        "startChar": 5,
        "endLine": 30,
        "endChar": 7
      },
      "revId": "7371c5929c6dc988929fd1a822d93d28ad5a2ea6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3dd2e91_e01ad609",
        "filename": "include/pattern.hpp",
        "patchSetId": 9
      },
      "lineNbr": 30,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-04-06T22:42:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7bd5c88d_93b9ab67",
      "range": {
        "startLine": 29,
        "startChar": 5,
        "endLine": 30,
        "endChar": 7
      },
      "revId": "7371c5929c6dc988929fd1a822d93d28ad5a2ea6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53080bd9_40afe89c",
        "filename": "include/pattern.hpp",
        "patchSetId": 9
      },
      "lineNbr": 44,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2022-04-06T20:16:10Z",
      "side": 1,
      "message": "same here",
      "range": {
        "startLine": 43,
        "startChar": 5,
        "endLine": 44,
        "endChar": 7
      },
      "revId": "7371c5929c6dc988929fd1a822d93d28ad5a2ea6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a05a0f9_afde0709",
        "filename": "include/pattern.hpp",
        "patchSetId": 9
      },
      "lineNbr": 44,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-04-06T22:42:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53080bd9_40afe89c",
      "range": {
        "startLine": 43,
        "startChar": 5,
        "endLine": 44,
        "endChar": 7
      },
      "revId": "7371c5929c6dc988929fd1a822d93d28ad5a2ea6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6184ebd_374fa146",
        "filename": "src/test/erase/pattern_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2022-04-06T20:16:10Z",
      "side": 1,
      "message": "In the zero test, you have a test case where you read too much data. But you don\u0027t have that here.",
      "revId": "7371c5929c6dc988929fd1a822d93d28ad5a2ea6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "298c073c_ab1fca3d",
        "filename": "src/test/erase/pattern_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-04-06T22:42:21Z",
      "side": 1,
      "message": "Yep, I can add that test back.\nAdded back",
      "parentUuid": "e6184ebd_374fa146",
      "revId": "7371c5929c6dc988929fd1a822d93d28ad5a2ea6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "942afa08_9839a61a",
        "filename": "src/test/erase/pattern_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 102,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2022-04-06T20:16:10Z",
      "side": 1,
      "message": "Why are there 2 of these?",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 102,
        "endChar": 59
      },
      "revId": "7371c5929c6dc988929fd1a822d93d28ad5a2ea6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5982cf5e_731d7f01",
        "filename": "src/test/erase/pattern_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 102,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-04-06T22:42:21Z",
      "side": 1,
      "message": "It is intentional.\nI wanted 3 chunks of data. short1, short2, restOfData?",
      "parentUuid": "942afa08_9839a61a",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 102,
        "endChar": 59
      },
      "revId": "7371c5929c6dc988929fd1a822d93d28ad5a2ea6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36cea839_cee53655",
        "filename": "src/test/erase/pattern_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 129,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2022-04-06T20:16:10Z",
      "side": 1,
      "message": "Does the test ever get to the point of returning restOfData? It seems to me that it will just return shortData1 indefinitely.\n\nIt might make sense to have this conform to what you\u0027re doing in the zero test, where you just have several WillOnce() clauses in a row.",
      "range": {
        "startLine": 124,
        "startChar": 4,
        "endLine": 129,
        "endChar": 12
      },
      "revId": "7371c5929c6dc988929fd1a822d93d28ad5a2ea6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e698674_6cce02f9",
        "filename": "src/test/erase/pattern_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 129,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-04-06T22:42:21Z",
      "side": 1,
      "message": "That is a fine idea.\nI was under the impression that the InSequence would inforce the retires of the EXEPCT calls, but I am not an expert.",
      "parentUuid": "36cea839_cee53655",
      "range": {
        "startLine": 124,
        "startChar": 4,
        "endLine": 129,
        "endChar": 12
      },
      "revId": "7371c5929c6dc988929fd1a822d93d28ad5a2ea6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dd6f0ef_0aeb2a69",
        "filename": "src/test/erase/pattern_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 129,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2022-04-07T16:47:39Z",
      "side": 1,
      "message": "By using WillRepeatedly(), I think the test will just return shortData1 every time. There\u0027s no indication for when it should start returning restOfData. You can try adding print statement to confirm this behavior, if you want.",
      "parentUuid": "4e698674_6cce02f9",
      "range": {
        "startLine": 124,
        "startChar": 4,
        "endLine": 129,
        "endChar": 12
      },
      "revId": "7371c5929c6dc988929fd1a822d93d28ad5a2ea6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1cdc4d0_861969bd",
        "filename": "src/test/erase/pattern_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 129,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-04-07T18:37:50Z",
      "side": 1,
      "message": "Yeah, I was following this example (http://google.github.io/googletest/gmock_cook_book.html#PartialOrder) for the ordering of calls. \n\nWillOnce does not automatically retire the saturated call. It needed the explicet\n\"RetiresOnSaturation\".",
      "parentUuid": "8dd6f0ef_0aeb2a69",
      "range": {
        "startLine": 124,
        "startChar": 4,
        "endLine": 129,
        "endChar": 12
      },
      "revId": "7371c5929c6dc988929fd1a822d93d28ad5a2ea6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9919427_0b99e673",
        "filename": "src/test/erase/pattern_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 137,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2022-04-06T20:16:10Z",
      "side": 1,
      "message": "Did you forget the verify step?",
      "range": {
        "startLine": 137,
        "startChar": 4,
        "endLine": 137,
        "endChar": 51
      },
      "revId": "7371c5929c6dc988929fd1a822d93d28ad5a2ea6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcc02f5e_80c367bc",
        "filename": "src/test/erase/pattern_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 137,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-04-06T22:42:21Z",
      "side": 1,
      "message": "no I removed it, along with the expect reads.\nI was not sure the complexity the expect_calls were worth it.",
      "parentUuid": "f9919427_0b99e673",
      "range": {
        "startLine": 137,
        "startChar": 4,
        "endLine": 137,
        "endChar": 51
      },
      "revId": "7371c5929c6dc988929fd1a822d93d28ad5a2ea6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea731b4f_766d540c",
        "filename": "src/test/erase/pattern_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 137,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2022-04-07T16:47:39Z",
      "side": 1,
      "message": "I think it makes sense to add the coverage for the verify portion, as well. You did it fairly concisely in the zero test.",
      "parentUuid": "fcc02f5e_80c367bc",
      "range": {
        "startLine": 137,
        "startChar": 4,
        "endLine": 137,
        "endChar": 51
      },
      "revId": "7371c5929c6dc988929fd1a822d93d28ad5a2ea6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d178e197_4374cc70",
        "filename": "src/test/erase/pattern_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 137,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-04-07T18:37:50Z",
      "side": 1,
      "message": "Okay, if we want that, I might want some gmock experts to explain/advice on my test setup (and why did did not work as expected).",
      "parentUuid": "ea731b4f_766d540c",
      "range": {
        "startLine": 137,
        "startChar": 4,
        "endLine": 137,
        "endChar": 51
      },
      "revId": "7371c5929c6dc988929fd1a822d93d28ad5a2ea6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b65e2bd_5593889c",
        "filename": "src/test/erase/pattern_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 137,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-04-07T21:22:43Z",
      "side": 1,
      "message": "done. we are now exercising the verifyPattern also",
      "parentUuid": "d178e197_4374cc70",
      "range": {
        "startLine": 137,
        "startChar": 4,
        "endLine": 137,
        "endChar": 51
      },
      "revId": "7371c5929c6dc988929fd1a822d93d28ad5a2ea6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}